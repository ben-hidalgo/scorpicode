syntax = "proto3";

package hats;

option go_package = "hatspb";

// Hats service makes hats for clients.
service Hats {

  // MakeHats creates a quantity of hats with the given characteristics
  rpc MakeHats(MakeHatsRequest) returns (MakeHatsResponse);

  // ListHats returns hats for the given query
  rpc ListHats(ListHatsRequest) returns (ListHatsResponse);

  // ListSizes returns the available sizes
  rpc ListSizes(ListSizesRequest) returns (ListSizesResponse);

  // DeleteHat deletes the given hat
  rpc DeleteHat(DeleteHatRequest) returns (DeleteHatResponse);

  // FetchHat returns the hat by ID
  rpc FetchHat(FetchHatRequest) returns (FetchHatResponse);
}


// A Hat is a piece of headwear
message Hat {
  string id = 1;
  string created_at = 2;
  string updated_at = 3;
  int32 version = 4;
  string size = 5;
  string color = 6;
  string style = 7;
  string batch = 8;
}

message Order {
  string id = 1;
  string created_at = 2;
  string updated_at = 3;
  int32 version = 4;
  string size = 5;
  string color = 6;
  string style = 7;
  int32 quantity = 8;
  string notes = 9;
  string batch = 10;
}


message MakeHatsRequest {
  string size = 1;
  string color = 2; // one of: RED, BLUE, GREEN, YELLOW, PURPLE, BLACK, GREY, ORANGE
  string style = 3;
  int32 quantity = 4;
  string notes = 5;
}
message MakeHatsResponse {
  Order order = 1;
}

message ListHatsRequest {
  int32 limit = 1;
  int32 offset = 2;
}
message ListHatsResponse {
  repeated Hat hats = 1;
  int32 limit = 2;
  int32 offset = 3;
}

message Size {
  string slug = 1;
  string name = 2;
}

message ListSizesRequest {
}
message ListSizesResponse {
  repeated Size sizes = 1;
}

message DeleteHatRequest {
  string id = 1;
  int32 version = 2;
}
message DeleteHatResponse {
}

message FetchHatRequest {
  string id = 1;
}
message FetchHatResponse {
  Hat hat = 1;
}
