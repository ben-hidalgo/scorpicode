syntax = "proto3";

package hats;

option go_package = "hatspb";

// Hats service makes hats for clients.
service Hats {

  // MakeHats creates a quantity of hats with the given characteristics
  rpc MakeHats(MakeHatsRequest) returns (MakeHatsResponse);

  // ListHats returns hats for the given query
  rpc ListHats(ListHatsRequest) returns (ListHatsResponse);

  // ListSizes returns the available sizes
  rpc ListSizes(ListSizesRequest) returns (ListSizesResponse);

  // DeleteHat deletes the given hat
  rpc DeleteHat(DeleteHatRequest) returns (DeleteHatResponse);

  // FetchHat returns the hat by ID
  rpc FetchHat(FetchHatRequest) returns (FetchHatResponse);
}

enum Style {
  UNKNOWN_STYLE = 0;
  BOWLER = 1;
  FEDORA = 2;
  BASEBALL = 3;
  NEWSBOY = 4;
  COWBOY = 5;
  DERBY = 6;
  TOP_HAT = 7;
}

// A Hat is a piece of headwear
message Hat {
  string id = 1;
  int32 version = 2;
  string size = 3;
  string color = 4;
  Style style = 5;
}

message MakeHatsRequest {
  string size = 1;
  string color = 2; // one of: RED, BLUE, GREEN, YELLOW, PURPLE, BLACK, GREY, ORANGE
  Style style = 3;
  int32 quantity = 4;
  string notes = 5;
}
message MakeHatsResponse {
  Hat hat = 1;
}

message ListHatsRequest {
  int32 limit = 1;
  int32 offset = 2;
}
message ListHatsResponse {
  repeated Hat hats = 1;
  int32 limit = 2;
  int32 offset = 3;
}

message Size {
  string slug = 1;
  string name = 2;
}

message ListSizesRequest {
}
message ListSizesResponse {
  repeated Size sizes = 1;
}

message DeleteHatRequest {
  string id = 1;
  int32 version = 2;
}
message DeleteHatResponse {
}

message FetchHatRequest {
  string id = 1;
}
message FetchHatResponse {
  Hat hat = 1;
}
