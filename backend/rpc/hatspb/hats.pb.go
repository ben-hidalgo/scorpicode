// Code generated by protoc-gen-go. DO NOT EDIT.
// source: hats.proto

package hatspb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Style int32

const (
	Style_UNKNOWN  Style = 0
	Style_BOWLER   Style = 1
	Style_FEDORA   Style = 2
	Style_BASEBALL Style = 3
	Style_NEWSBOY  Style = 4
	Style_COWBOY   Style = 5
	Style_DERBY    Style = 6
	Style_TOP_HAT  Style = 7
)

var Style_name = map[int32]string{
	0: "UNKNOWN",
	1: "BOWLER",
	2: "FEDORA",
	3: "BASEBALL",
	4: "NEWSBOY",
	5: "COWBOY",
	6: "DERBY",
	7: "TOP_HAT",
}

var Style_value = map[string]int32{
	"UNKNOWN":  0,
	"BOWLER":   1,
	"FEDORA":   2,
	"BASEBALL": 3,
	"NEWSBOY":  4,
	"COWBOY":   5,
	"DERBY":    6,
	"TOP_HAT":  7,
}

func (x Style) String() string {
	return proto.EnumName(Style_name, int32(x))
}

func (Style) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b65fa2650eb6b0bd, []int{0}
}

// A Hat is a piece of headwear made by a Hats.
type Hat struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Version              int32    `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	Inches               int32    `protobuf:"varint,3,opt,name=inches,proto3" json:"inches,omitempty"`
	Color                string   `protobuf:"bytes,4,opt,name=color,proto3" json:"color,omitempty"`
	Style                Style    `protobuf:"varint,5,opt,name=style,proto3,enum=hats.Style" json:"style,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Hat) Reset()         { *m = Hat{} }
func (m *Hat) String() string { return proto.CompactTextString(m) }
func (*Hat) ProtoMessage()    {}
func (*Hat) Descriptor() ([]byte, []int) {
	return fileDescriptor_b65fa2650eb6b0bd, []int{0}
}

func (m *Hat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Hat.Unmarshal(m, b)
}
func (m *Hat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Hat.Marshal(b, m, deterministic)
}
func (m *Hat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hat.Merge(m, src)
}
func (m *Hat) XXX_Size() int {
	return xxx_messageInfo_Hat.Size(m)
}
func (m *Hat) XXX_DiscardUnknown() {
	xxx_messageInfo_Hat.DiscardUnknown(m)
}

var xxx_messageInfo_Hat proto.InternalMessageInfo

func (m *Hat) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Hat) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Hat) GetInches() int32 {
	if m != nil {
		return m.Inches
	}
	return 0
}

func (m *Hat) GetColor() string {
	if m != nil {
		return m.Color
	}
	return ""
}

func (m *Hat) GetStyle() Style {
	if m != nil {
		return m.Style
	}
	return Style_UNKNOWN
}

type MakeHatRequest struct {
	Inches               int32    `protobuf:"varint,1,opt,name=inches,proto3" json:"inches,omitempty"`
	Color                string   `protobuf:"bytes,2,opt,name=color,proto3" json:"color,omitempty"`
	Style                Style    `protobuf:"varint,3,opt,name=style,proto3,enum=hats.Style" json:"style,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MakeHatRequest) Reset()         { *m = MakeHatRequest{} }
func (m *MakeHatRequest) String() string { return proto.CompactTextString(m) }
func (*MakeHatRequest) ProtoMessage()    {}
func (*MakeHatRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b65fa2650eb6b0bd, []int{1}
}

func (m *MakeHatRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MakeHatRequest.Unmarshal(m, b)
}
func (m *MakeHatRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MakeHatRequest.Marshal(b, m, deterministic)
}
func (m *MakeHatRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MakeHatRequest.Merge(m, src)
}
func (m *MakeHatRequest) XXX_Size() int {
	return xxx_messageInfo_MakeHatRequest.Size(m)
}
func (m *MakeHatRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MakeHatRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MakeHatRequest proto.InternalMessageInfo

func (m *MakeHatRequest) GetInches() int32 {
	if m != nil {
		return m.Inches
	}
	return 0
}

func (m *MakeHatRequest) GetColor() string {
	if m != nil {
		return m.Color
	}
	return ""
}

func (m *MakeHatRequest) GetStyle() Style {
	if m != nil {
		return m.Style
	}
	return Style_UNKNOWN
}

type MakeHatResponse struct {
	Hat                  *Hat     `protobuf:"bytes,1,opt,name=hat,proto3" json:"hat,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MakeHatResponse) Reset()         { *m = MakeHatResponse{} }
func (m *MakeHatResponse) String() string { return proto.CompactTextString(m) }
func (*MakeHatResponse) ProtoMessage()    {}
func (*MakeHatResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b65fa2650eb6b0bd, []int{2}
}

func (m *MakeHatResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MakeHatResponse.Unmarshal(m, b)
}
func (m *MakeHatResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MakeHatResponse.Marshal(b, m, deterministic)
}
func (m *MakeHatResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MakeHatResponse.Merge(m, src)
}
func (m *MakeHatResponse) XXX_Size() int {
	return xxx_messageInfo_MakeHatResponse.Size(m)
}
func (m *MakeHatResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MakeHatResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MakeHatResponse proto.InternalMessageInfo

func (m *MakeHatResponse) GetHat() *Hat {
	if m != nil {
		return m.Hat
	}
	return nil
}

type ListHatsRequest struct {
	Limit                int32    `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset               int32    `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListHatsRequest) Reset()         { *m = ListHatsRequest{} }
func (m *ListHatsRequest) String() string { return proto.CompactTextString(m) }
func (*ListHatsRequest) ProtoMessage()    {}
func (*ListHatsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b65fa2650eb6b0bd, []int{3}
}

func (m *ListHatsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListHatsRequest.Unmarshal(m, b)
}
func (m *ListHatsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListHatsRequest.Marshal(b, m, deterministic)
}
func (m *ListHatsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListHatsRequest.Merge(m, src)
}
func (m *ListHatsRequest) XXX_Size() int {
	return xxx_messageInfo_ListHatsRequest.Size(m)
}
func (m *ListHatsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListHatsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListHatsRequest proto.InternalMessageInfo

func (m *ListHatsRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListHatsRequest) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type ListHatsResponse struct {
	Hats                 []*Hat   `protobuf:"bytes,1,rep,name=hats,proto3" json:"hats,omitempty"`
	Limit                int32    `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset               int32    `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListHatsResponse) Reset()         { *m = ListHatsResponse{} }
func (m *ListHatsResponse) String() string { return proto.CompactTextString(m) }
func (*ListHatsResponse) ProtoMessage()    {}
func (*ListHatsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b65fa2650eb6b0bd, []int{4}
}

func (m *ListHatsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListHatsResponse.Unmarshal(m, b)
}
func (m *ListHatsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListHatsResponse.Marshal(b, m, deterministic)
}
func (m *ListHatsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListHatsResponse.Merge(m, src)
}
func (m *ListHatsResponse) XXX_Size() int {
	return xxx_messageInfo_ListHatsResponse.Size(m)
}
func (m *ListHatsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListHatsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListHatsResponse proto.InternalMessageInfo

func (m *ListHatsResponse) GetHats() []*Hat {
	if m != nil {
		return m.Hats
	}
	return nil
}

func (m *ListHatsResponse) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListHatsResponse) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func init() {
	proto.RegisterEnum("hats.Style", Style_name, Style_value)
	proto.RegisterType((*Hat)(nil), "hats.Hat")
	proto.RegisterType((*MakeHatRequest)(nil), "hats.MakeHatRequest")
	proto.RegisterType((*MakeHatResponse)(nil), "hats.MakeHatResponse")
	proto.RegisterType((*ListHatsRequest)(nil), "hats.ListHatsRequest")
	proto.RegisterType((*ListHatsResponse)(nil), "hats.ListHatsResponse")
}

func init() { proto.RegisterFile("hats.proto", fileDescriptor_b65fa2650eb6b0bd) }

var fileDescriptor_b65fa2650eb6b0bd = []byte{
	// 395 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0xcb, 0xab, 0xda, 0x40,
	0x14, 0xc6, 0x3b, 0x49, 0x26, 0xd1, 0x63, 0xf1, 0x0e, 0x83, 0xbd, 0x84, 0x5b, 0x0a, 0x69, 0x56,
	0xd2, 0x85, 0x0b, 0x0b, 0x85, 0xae, 0x4a, 0x52, 0x53, 0x02, 0x4d, 0x93, 0x12, 0x2d, 0xc1, 0x6e,
	0x24, 0xea, 0x88, 0x41, 0x6b, 0xac, 0x33, 0x2d, 0xb8, 0xeb, 0x9f, 0x5e, 0x66, 0x32, 0xd6, 0x07,
	0x76, 0x77, 0x9e, 0xf3, 0xfb, 0xce, 0x97, 0x00, 0xac, 0x4b, 0xc1, 0x07, 0xfb, 0x43, 0x2d, 0x6a,
	0x6a, 0xc9, 0xd8, 0xff, 0x83, 0xc0, 0x8c, 0x4b, 0x41, 0xbb, 0x60, 0x54, 0x4b, 0x17, 0x79, 0xa8,
	0xdf, 0xce, 0x8d, 0x6a, 0x49, 0x5d, 0x70, 0x7e, 0xb3, 0x03, 0xaf, 0xea, 0x9d, 0x6b, 0x78, 0xa8,
	0x8f, 0xf3, 0x53, 0x4a, 0x1f, 0xc1, 0xae, 0x76, 0x8b, 0x35, 0xe3, 0xae, 0xa9, 0x1a, 0x3a, 0xa3,
	0x3d, 0xc0, 0x8b, 0x7a, 0x5b, 0x1f, 0x5c, 0x4b, 0x3d, 0xd2, 0x24, 0xf4, 0x35, 0x60, 0x2e, 0x8e,
	0x5b, 0xe6, 0x62, 0x0f, 0xf5, 0xbb, 0xc3, 0xce, 0x40, 0x29, 0x18, 0xcb, 0x52, 0xde, 0x74, 0xfc,
	0x12, 0xba, 0x5f, 0xca, 0x0d, 0x8b, 0x4b, 0x91, 0xb3, 0x9f, 0xbf, 0x18, 0x17, 0x17, 0x08, 0x74,
	0x1f, 0x61, 0xdc, 0x45, 0x98, 0xff, 0x45, 0x0c, 0xe0, 0xe1, 0x1f, 0x82, 0xef, 0xeb, 0x1d, 0x67,
	0xf4, 0x25, 0x98, 0xeb, 0x52, 0x28, 0x40, 0x67, 0xd8, 0x6e, 0x76, 0x64, 0x5f, 0x56, 0xfd, 0x0f,
	0xf0, 0x90, 0x54, 0x5c, 0xc4, 0xa5, 0xe0, 0x27, 0x4d, 0x3d, 0xc0, 0xdb, 0xea, 0x47, 0x25, 0xb4,
	0xa4, 0x26, 0x91, 0x4a, 0xeb, 0xd5, 0x8a, 0x33, 0xa1, 0x5d, 0xd2, 0x99, 0x3f, 0x03, 0x72, 0x7e,
	0x40, 0x13, 0x5f, 0x81, 0xb2, 0xdc, 0x45, 0x9e, 0x79, 0x8d, 0x54, 0xe5, 0x33, 0xc0, 0xb8, 0x0f,
	0x30, 0x2f, 0x01, 0x6f, 0x36, 0x80, 0xd5, 0x85, 0xb4, 0x03, 0xce, 0xb7, 0xf4, 0x73, 0x9a, 0x15,
	0x29, 0x79, 0x46, 0x01, 0xec, 0x30, 0x2b, 0x92, 0x28, 0x27, 0x48, 0xc6, 0x9f, 0xa2, 0x51, 0x96,
	0x07, 0xc4, 0xa0, 0xcf, 0xa1, 0x15, 0x06, 0xe3, 0x28, 0x0c, 0x92, 0x84, 0x98, 0x72, 0x25, 0x8d,
	0x8a, 0x71, 0x98, 0x4d, 0x89, 0x25, 0xc7, 0x3e, 0x66, 0x85, 0x8c, 0x31, 0x6d, 0x03, 0x1e, 0x45,
	0x79, 0x38, 0x25, 0xb6, 0x9c, 0x99, 0x64, 0x5f, 0x67, 0x71, 0x30, 0x21, 0xce, 0xf0, 0x08, 0x96,
	0xbc, 0x84, 0xbe, 0x03, 0x47, 0xdb, 0x48, 0x7b, 0x8d, 0xfc, 0xeb, 0x0f, 0xf7, 0xf4, 0xe2, 0xa6,
	0xaa, 0x2f, 0x7f, 0x0f, 0xad, 0x93, 0x1b, 0x54, 0x8f, 0xdc, 0xd8, 0xfb, 0xf4, 0x78, 0x5b, 0x6e,
	0x56, 0xc3, 0xd6, 0x77, 0x5b, 0x36, 0xf6, 0xf3, 0xb9, 0xad, 0x7e, 0xdb, 0xb7, 0x7f, 0x03, 0x00,
	0x00, 0xff, 0xff, 0x23, 0x9c, 0x15, 0xdd, 0xc4, 0x02, 0x00, 0x00,
}
