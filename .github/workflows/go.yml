name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.14.2
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get Dependencies
      working-directory: ./backend
      run: |
        go get -u golang.org/x/lint/golint
        go get -v -t -d ./...

    - name: Vet
      working-directory: ./backend
      run: |
        go vet ./...
        golint -set_exit_status ./...

    - name: Unit Test
      working-directory: ./backend
      run: go test ./... -short -v

    - name: Write Checksum Tags
      working-directory: .
      run: |
        ./devops/scripts/write-tags.sh
        cat ./devops/helmchart/tags.yaml

    - name: Docker Build
      working-directory: .
      run: ./devops/scripts/docker-build.sh

    - name: Install Minikube
      working-directory: .
      run: |
        sudo apt-get update 
        sudo apt install virtualbox
        wget https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
        chmod +x minikube-linux-amd64
        sudo mv minikube-linux-amd64 /usr/local/bin/minikube
        minikube version

    - name: Start Minikube
      working-directory: .
      run: minikube start --driver=docker --insecure-registry="localhost:5000"

    - name: Install Helm
      working-directory: .
      run: |
        curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
        chmod +x get_helm.sh
        ./get_helm.sh

      # TODO: sops is not setup... using dev.yaml for integration tests
    - name: Helm Upgrade Dev
      working-directory: .
      run: |
        ./devops/scripts/helm-upgrade.sh dev
        sleep 10
        kubectl get po -n dev
        kubectl wait --for=condition=ready pod -l release=scorpicode --timeout=180s -n dev
        kubectl get po -n dev

    - name: Integration Tests
      working-directory: .
      run: |
        ./devops/scripts/integration-tests.sh dev
        helm delete scorpicode -n dev 

    - name: Deploy Images Minikube
      working-directory: .
      run: |
        minikube addons enable registry
        cat /etc/docker/daemon.json

    - name: Zip Helmchart
      working-directory: .
      run: tar cvzf helmchart-${{ github.run_number }}-${{ github.sha }}.tar.gz ./devops/helmchart/

    - name: Upload Helmchart Artifact
      uses: actions/upload-artifact@v1
      with:
        name: helmchart-${{ github.run_number }}-${{ github.sha }}.tar.gz
        path: helmchart-${{ github.run_number }}-${{ github.sha }}.tar.gz
